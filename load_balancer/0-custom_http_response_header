#!/usr/bin/env bash
#this configures new server to be identical to primary one but --
#Only for load bearing purposes

echo -e "Updating server properties AND PURPOSE....\n"

function install(){
    command -v "$1" &> /dev/null

    #disable=SC2181 / disabling shellcheck, first server properties
	if [ $? -ne 0 ]; then
		echo -e "	Installing: $1$\n"
		sudo apt-get update -y -qq && \
			sudo apt-get install -y "$1" -qq
		echo -e "\n"
	else
		echo -e "	${1} is already installed.\n"
	fi
}

install nginx
echo -e "\nSetting up some minor stuff.\n"

#Firewall wont touch NGINX
sudo ufw allow 'Nginx HTTP'

#Give the user ownership to website files
if [ -d "/var/www" ]; then
	sudo chown -R "$USER":"$USER" /var/www
	sudo chmod -R 755 /var/www
else
	sudo mkdir -p /var/www
	sudo chown -R "$USER":"$USER" /var/www
	sudo chmod -R 755 /var/www
fi

#create directories if not present
for dir in /var/www/{html,error}; do
	if ! [ -d "$dir" ]; then
		mkdir -p "$dir"
	fi
done

# creating new index
echo "Holberton School for the win!" > /var/www/html/index.html

# create new error page
echo "Ceci n'est pas une page" > /var/www/html/error_404.html

# backup default server config file
sudo cp /etc/nginx/sites-enabled/default nginx-sites-enabled_default.backup

server_config=\
"server {
		listen 80 default_server;
		listen [::]:80 default_server;
		root /var/www/html;
		index index.html index.htm index.nginx-debian.html
		server_name_;
		add_header X-Served-By \$hostname;
		location / {
			try_files \$uri \$uri/ =404;
		}
		if (\$request_filename ~ redirect_me){
			rewrite ^ https://th3-gr00t.tk/ permanent;
		}
		error_page 404 /error_404.html;
		location = /error_404.html {
			internal;
		}
}"

#shellcheck disable=SC2154
echo "$server_config" | sudo dd status=none of=/etc/nginx/sites-enabled/default

if [ "$(pgrep -c nginx)" -le 0 ]; then
	sudo service nginx start
else
	sudo service nginx restart
fi
